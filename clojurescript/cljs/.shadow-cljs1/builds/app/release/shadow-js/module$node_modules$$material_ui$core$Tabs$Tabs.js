["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/Tabs/Tabs.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$Tabs$Tabs=function(c,d,a,f,b,g){d=a(\"module$node_modules$$babel$runtime$helpers$builtin$interopRequireDefault\");Object.defineProperty(b,\"__esModule\",{value:!0});b.default=b.styles=void 0;var e=d(a(\"module$node_modules$$babel$runtime$helpers$builtin$extends\")),k=d(a(\"module$node_modules$$babel$runtime$helpers$builtin$objectSpread\")),l=d(a(\"module$node_modules$$babel$runtime$helpers$builtin$objectWithoutProperties\")),q=d(a(\"module$node_modules$$babel$runtime$helpers$builtin$classCallCheck\")),\nn=d(a(\"module$node_modules$$babel$runtime$helpers$builtin$createClass\")),p=d(a(\"module$node_modules$$babel$runtime$helpers$builtin$possibleConstructorReturn\")),m=d(a(\"module$node_modules$$babel$runtime$helpers$builtin$inherits\")),h=d(a(\"module$node_modules$$babel$runtime$helpers$builtin$defineProperty\")),r=d(a(\"module$node_modules$react$index\"));d(a(\"module$node_modules$prop_types$index\"));d(a(\"module$node_modules$warning$warning\"));var t=d(a(\"module$node_modules$classnames$index\")),u=d(a(\"module$node_modules$react_event_listener$dist$react_event_listener_cjs\")),\nw=d(a(\"module$node_modules$debounce$index\")),v=a(\"module$node_modules$normalize_scroll_left$lib$main\"),E=d(a(\"module$node_modules$$material_ui$core$internal$animate\")),z=d(a(\"module$node_modules$$material_ui$core$Tabs$ScrollbarSize\"));c=d(a(\"module$node_modules$$material_ui$core$styles$withStyles\"));var B=d(a(\"module$node_modules$$material_ui$core$Tabs$TabIndicator\"));a=d(a(\"module$node_modules$$material_ui$core$Tabs$TabScrollButton\"));d=function(a){return{root:{overflow:\"hidden\",minHeight:48,WebkitOverflowScrolling:\"touch\"},\nflexContainer:{display:\"flex\"},centered:{justifyContent:\"center\"},scroller:{position:\"relative\",display:\"inline-block\",flex:\"1 1 auto\",whiteSpace:\"nowrap\"},fixed:{overflowX:\"hidden\",width:\"100%\"},scrollable:{overflowX:\"scroll\"},scrollButtons:{},scrollButtonsAuto:(0,h.default)({},a.breakpoints.down(\"xs\"),{display:\"none\"}),indicator:{}}};b.styles=d;f=function(a){function b(){var a,c,d;(0,q.default)(this,b);for(var e=arguments.length,f=Array(e),g=0;g<e;g++)f[g]=arguments[g];return(0,p.default)(d,(c=\nd=(0,p.default)(this,(a=b.__proto__||Object.getPrototypeOf(b)).call.apply(a,[this].concat(f))),d.tabs=null,d.valueToIndex=new Map,d.handleResize=(0,w.default)(function(){d.updateIndicatorState(d.props);d.updateScrollButtonState()},166),d.handleTabsScroll=(0,w.default)(function(){d.updateScrollButtonState()},166),d.state={indicatorStyle:{},scrollerStyle:{marginBottom:0},showLeftScroll:!1,showRightScroll:!1,mounted:!1},d.getConditionalElements=function(){var a=d.props,b=a.classes,c=a.scrollable,e=a.ScrollButtonComponent,\nf=a.scrollButtons;a=a.theme;var g={};g.scrollbarSizeListener=c?r.default.createElement(z.default,{onLoad:d.handleScrollbarSizeChange,onChange:d.handleScrollbarSizeChange}):null;c=c&&(\"auto\"===f||\"on\"===f);g.scrollButtonLeft=c?r.default.createElement(e,{direction:a&&\"rtl\"===a.direction?\"right\":\"left\",onClick:d.handleLeftScrollClick,visible:d.state.showLeftScroll,className:(0,t.default)(b.scrollButtons,(0,h.default)({},b.scrollButtonsAuto,\"auto\"===f))}):null;g.scrollButtonRight=c?r.default.createElement(e,\n{direction:a&&\"rtl\"===a.direction?\"left\":\"right\",onClick:d.handleRightScrollClick,visible:d.state.showRightScroll,className:(0,t.default)(b.scrollButtons,(0,h.default)({},b.scrollButtonsAuto,\"auto\"===f))}):null;return g},d.getTabsMeta=function(a,b){if(d.tabsRef){var c=d.tabsRef.getBoundingClientRect();c={clientWidth:d.tabsRef.clientWidth,scrollLeft:d.tabsRef.scrollLeft,scrollLeftNormalized:(0,v.getNormalizedScrollLeft)(d.tabsRef,b),scrollWidth:d.tabsRef.scrollWidth,left:c.left,right:c.right}}if(d.tabsRef&&\n!1!==a&&(b=d.tabsRef.children[0].children,0<b.length)){a=b[d.valueToIndex.get(a)];void 0;var e=a?a.getBoundingClientRect():null}return{tabsMeta:c,tabMeta:e}},d.handleLeftScrollClick=function(){d.moveTabsScroll(-d.tabsRef.clientWidth)},d.handleRightScrollClick=function(){d.moveTabsScroll(d.tabsRef.clientWidth)},d.handleScrollbarSizeChange=function(a){d.setState({scrollerStyle:{marginBottom:-a.scrollbarHeight}})},d.moveTabsScroll=function(a){var b=d.props.theme;a=d.tabsRef.scrollLeft+a*(\"rtl\"===b.direction?\n-1:1);b=\"rtl\"===b.direction&&\"reverse\"===(0,v.detectScrollType)()?-1:1;d.scroll(b*a)},d.scrollSelectedIntoView=function(){var a=d.props,b=d.getTabsMeta(a.value,a.theme.direction);a=b.tabsMeta;(b=b.tabMeta)&&a&&(b.left<a.left?d.scroll(a.scrollLeft+(b.left-a.left)):b.right>a.right&&d.scroll(a.scrollLeft+(b.right-a.right)))},d.scroll=function(a){(0,E.default)(\"scrollLeft\",d.tabsRef,a)},d.updateScrollButtonState=function(){var a=d.props,b=a.scrollButtons,c=a.theme;if(a.scrollable&&\"off\"!==b){b=d.tabsRef;\na=b.scrollWidth;var e=b.clientWidth,f=(0,v.getNormalizedScrollLeft)(d.tabsRef,c.direction);b=\"rtl\"===c.direction?a>e+f:0<f;c=\"rtl\"===c.direction?0<f:a>e+f;b===d.state.showLeftScroll&&c===d.state.showRightScroll||d.setState({showLeftScroll:b,showRightScroll:c})}},c))}(0,m.default)(b,a);(0,n.default)(b,[{key:\"componentDidMount\",value:function(){this.setState({mounted:!0});this.updateIndicatorState(this.props);this.updateScrollButtonState();this.props.action&&this.props.action({updateIndicator:this.handleResize})}},\n{key:\"componentDidUpdate\",value:function(a,b){this.updateIndicatorState(this.props);this.updateScrollButtonState();this.state.indicatorStyle!==b.indicatorStyle&&this.scrollSelectedIntoView()}},{key:\"componentWillUnmount\",value:function(){this.handleResize.clear();this.handleTabsScroll.clear()}},{key:\"updateIndicatorState\",value:function(a){var b=a.theme,c=this.getTabsMeta(a.value,b.direction);a=c.tabsMeta;c=c.tabMeta;var d=0;c&&a&&(d=Math.round(c.left-a.left+(\"rtl\"===b.direction?a.scrollLeftNormalized+\na.clientWidth-a.scrollWidth:a.scrollLeft)));b={left:d,width:c?Math.round(c.width):0};b.left===this.state.indicatorStyle.left&&b.width===this.state.indicatorStyle.width||isNaN(b.left)||isNaN(b.width)||this.setState({indicatorStyle:b})}},{key:\"render\",value:function(){var a,b=this,c=this.props,d=c.centered,f=c.children,g=c.classes,m=c.className,n=c.component,p=c.fullWidth,q=c.indicatorColor,z=c.onChange,x=c.scrollable,v=c.TabIndicatorProps;v=void 0===v?{}:v;var w=c.textColor,y=c.value;c=(0,l.default)(c,\n\"action centered children classes className component fullWidth indicatorColor onChange scrollable ScrollButtonComponent scrollButtons TabIndicatorProps textColor theme value\".split(\" \"));void 0;m=(0,t.default)(g.root,m);d=(0,t.default)(g.flexContainer,(0,h.default)({},g.centered,d&&!x));x=(0,t.default)(g.scroller,(a={},(0,h.default)(a,g.fixed,!x),(0,h.default)(a,g.scrollable,x),a));var E=r.default.createElement(B.default,(0,e.default)({className:g.indicator,color:q},v,{style:(0,k.default)({},this.state.indicatorStyle,\nv.style)}));this.valueToIndex=new Map;var V=0;a=r.default.Children.map(f,function(a){if(!r.default.isValidElement(a))return null;void 0;var c=void 0===a.props.value?V:a.props.value;b.valueToIndex.set(c,V);var d=c===y;V+=1;return r.default.cloneElement(a,{fullWidth:p,indicator:d&&!b.state.mounted&&E,selected:d,onChange:z,textColor:w,value:c})});f=this.getConditionalElements();return r.default.createElement(n,(0,e.default)({className:m},c),r.default.createElement(u.default,{target:\"window\",onResize:this.handleResize}),\nf.scrollbarSizeListener,r.default.createElement(\"div\",{className:g.flexContainer},f.scrollButtonLeft,r.default.createElement(\"div\",{className:x,style:this.state.scrollerStyle,ref:function(a){b.tabsRef=a},role:\"tablist\",onScroll:this.handleTabsScroll},r.default.createElement(\"div\",{className:d},a),this.state.mounted&&E),f.scrollButtonRight))}}]);return b}(r.default.Component);f.propTypes={};f.defaultProps={centered:!1,component:\"div\",fullWidth:!1,indicatorColor:\"secondary\",scrollable:!1,ScrollButtonComponent:a.default,\nscrollButtons:\"auto\",textColor:\"inherit\"};a=(0,c.default)(d,{name:\"MuiTabs\",withTheme:!0})(f);b.default=a}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$Tabs$Tabs\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/possibleConstructorReturn\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactEventListener = _interopRequireDefault(require(\"react-event-listener\"));\n\nvar _debounce = _interopRequireDefault(require(\"debounce\"));\n\nvar _normalizeScrollLeft = require(\"normalize-scroll-left\");\n\nvar _animate = _interopRequireDefault(require(\"../internal/animate\"));\n\nvar _ScrollbarSize = _interopRequireDefault(require(\"./ScrollbarSize\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _TabIndicator = _interopRequireDefault(require(\"./TabIndicator\"));\n\nvar _TabScrollButton = _interopRequireDefault(require(\"./TabScrollButton\"));\n\n/* eslint-disable no-restricted-globals */\n// < 1kb payload overhead when lodash/debounce is > 3kb.\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `scrollable={false}`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `scrollable={false}`. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `scrollable={true}`. */\n    scrollable: {\n      overflowX: 'scroll'\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `sscrollButtons=\"auto\"`. */\n    scrollButtonsAuto: (0, _defineProperty2.default)({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\n\nexports.styles = styles;\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(Tabs, _React$Component);\n\n  function Tabs() {\n    var _ref;\n\n    var _temp, _this;\n\n    (0, _classCallCheck2.default)(this, Tabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call.apply(_ref, [this].concat(args))), _this.tabs = null, _this.valueToIndex = new Map(), _this.handleResize = (0, _debounce.default)(function () {\n      _this.updateIndicatorState(_this.props);\n\n      _this.updateScrollButtonState();\n    }, 166), _this.handleTabsScroll = (0, _debounce.default)(function () {\n      _this.updateScrollButtonState();\n    }, 166), _this.state = {\n      indicatorStyle: {},\n      scrollerStyle: {\n        marginBottom: 0\n      },\n      showLeftScroll: false,\n      showRightScroll: false,\n      mounted: false\n    }, _this.getConditionalElements = function () {\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          scrollable = _this$props.scrollable,\n          ScrollButtonComponent = _this$props.ScrollButtonComponent,\n          scrollButtons = _this$props.scrollButtons,\n          theme = _this$props.theme;\n      var conditionalElements = {};\n      conditionalElements.scrollbarSizeListener = scrollable ? _react.default.createElement(_ScrollbarSize.default, {\n        onLoad: _this.handleScrollbarSizeChange,\n        onChange: _this.handleScrollbarSizeChange\n      }) : null;\n      var showScrollButtons = scrollable && (scrollButtons === 'auto' || scrollButtons === 'on');\n      conditionalElements.scrollButtonLeft = showScrollButtons ? _react.default.createElement(ScrollButtonComponent, {\n        direction: theme && theme.direction === 'rtl' ? 'right' : 'left',\n        onClick: _this.handleLeftScrollClick,\n        visible: _this.state.showLeftScroll,\n        className: (0, _classnames.default)(classes.scrollButtons, (0, _defineProperty2.default)({}, classes.scrollButtonsAuto, scrollButtons === 'auto'))\n      }) : null;\n      conditionalElements.scrollButtonRight = showScrollButtons ? _react.default.createElement(ScrollButtonComponent, {\n        direction: theme && theme.direction === 'rtl' ? 'left' : 'right',\n        onClick: _this.handleRightScrollClick,\n        visible: _this.state.showRightScroll,\n        className: (0, _classnames.default)(classes.scrollButtons, (0, _defineProperty2.default)({}, classes.scrollButtonsAuto, scrollButtons === 'auto'))\n      }) : null;\n      return conditionalElements;\n    }, _this.getTabsMeta = function (value, direction) {\n      var tabsMeta;\n\n      if (_this.tabsRef) {\n        var rect = _this.tabsRef.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n\n        tabsMeta = {\n          clientWidth: _this.tabsRef.clientWidth,\n          scrollLeft: _this.tabsRef.scrollLeft,\n          scrollLeftNormalized: (0, _normalizeScrollLeft.getNormalizedScrollLeft)(_this.tabsRef, direction),\n          scrollWidth: _this.tabsRef.scrollWidth,\n          left: rect.left,\n          right: rect.right\n        };\n      }\n\n      var tabMeta;\n\n      if (_this.tabsRef && value !== false) {\n        var children = _this.tabsRef.children[0].children;\n\n        if (children.length > 0) {\n          var tab = children[_this.valueToIndex.get(value)];\n\n          process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(tab, \"Material-UI: the value provided `\".concat(value, \"` is invalid\")) : void 0;\n          tabMeta = tab ? tab.getBoundingClientRect() : null;\n        }\n      }\n\n      return {\n        tabsMeta: tabsMeta,\n        tabMeta: tabMeta\n      };\n    }, _this.handleLeftScrollClick = function () {\n      _this.moveTabsScroll(-_this.tabsRef.clientWidth);\n    }, _this.handleRightScrollClick = function () {\n      _this.moveTabsScroll(_this.tabsRef.clientWidth);\n    }, _this.handleScrollbarSizeChange = function (_ref2) {\n      var scrollbarHeight = _ref2.scrollbarHeight;\n\n      _this.setState({\n        scrollerStyle: {\n          marginBottom: -scrollbarHeight\n        }\n      });\n    }, _this.moveTabsScroll = function (delta) {\n      var theme = _this.props.theme;\n      var multiplier = theme.direction === 'rtl' ? -1 : 1;\n      var nextScrollLeft = _this.tabsRef.scrollLeft + delta * multiplier; // Fix for Edge\n\n      var invert = theme.direction === 'rtl' && (0, _normalizeScrollLeft.detectScrollType)() === 'reverse' ? -1 : 1;\n\n      _this.scroll(invert * nextScrollLeft);\n    }, _this.scrollSelectedIntoView = function () {\n      var _this$props2 = _this.props,\n          theme = _this$props2.theme,\n          value = _this$props2.value;\n\n      var _this$getTabsMeta = _this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta.tabsMeta,\n          tabMeta = _this$getTabsMeta.tabMeta;\n\n      if (!tabMeta || !tabsMeta) {\n        return;\n      }\n\n      if (tabMeta.left < tabsMeta.left) {\n        // left side of button is out of view\n        var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\n\n        _this.scroll(nextScrollLeft);\n      } else if (tabMeta.right > tabsMeta.right) {\n        // right side of button is out of view\n        var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\n\n        _this.scroll(_nextScrollLeft);\n      }\n    }, _this.scroll = function (value) {\n      (0, _animate.default)('scrollLeft', _this.tabsRef, value);\n    }, _this.updateScrollButtonState = function () {\n      var _this$props3 = _this.props,\n          scrollable = _this$props3.scrollable,\n          scrollButtons = _this$props3.scrollButtons,\n          theme = _this$props3.theme;\n\n      if (scrollable && scrollButtons !== 'off') {\n        var _this$tabsRef = _this.tabsRef,\n            scrollWidth = _this$tabsRef.scrollWidth,\n            clientWidth = _this$tabsRef.clientWidth;\n        var scrollLeft = (0, _normalizeScrollLeft.getNormalizedScrollLeft)(_this.tabsRef, theme.direction);\n        var showLeftScroll = theme.direction === 'rtl' ? scrollWidth > clientWidth + scrollLeft : scrollLeft > 0;\n        var showRightScroll = theme.direction === 'rtl' ? scrollLeft > 0 : scrollWidth > clientWidth + scrollLeft;\n\n        if (showLeftScroll !== _this.state.showLeftScroll || showRightScroll !== _this.state.showRightScroll) {\n          _this.setState({\n            showLeftScroll: showLeftScroll,\n            showRightScroll: showRightScroll\n          });\n        }\n      }\n    }, _temp));\n  }\n\n  (0, _createClass2.default)(Tabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({\n        mounted: true\n      });\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.props.action) {\n        this.props.action({\n          updateIndicator: this.handleResize\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // The index might have changed at the same time.\n      // We need to check again the right indicator position.\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.state.indicatorStyle !== prevState.indicatorStyle) {\n        this.scrollSelectedIntoView();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleResize.clear();\n      this.handleTabsScroll.clear();\n    }\n  }, {\n    key: \"updateIndicatorState\",\n    value: function updateIndicatorState(props) {\n      var theme = props.theme,\n          value = props.value;\n\n      var _getTabsMeta = this.getTabsMeta(value, theme.direction),\n          tabsMeta = _getTabsMeta.tabsMeta,\n          tabMeta = _getTabsMeta.tabMeta;\n\n      var left = 0;\n\n      if (tabMeta && tabsMeta) {\n        var correction = theme.direction === 'rtl' ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        left = Math.round(tabMeta.left - tabsMeta.left + correction);\n      }\n\n      var indicatorStyle = {\n        left: left,\n        // May be wrong until the font is loaded.\n        width: tabMeta ? Math.round(tabMeta.width) : 0\n      };\n\n      if ((indicatorStyle.left !== this.state.indicatorStyle.left || indicatorStyle.width !== this.state.indicatorStyle.width) && !isNaN(indicatorStyle.left) && !isNaN(indicatorStyle.width)) {\n        this.setState({\n          indicatorStyle: indicatorStyle\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames4,\n          _this2 = this;\n\n      var _props = this.props,\n          action = _props.action,\n          centered = _props.centered,\n          childrenProp = _props.children,\n          classes = _props.classes,\n          classNameProp = _props.className,\n          Component = _props.component,\n          fullWidth = _props.fullWidth,\n          indicatorColor = _props.indicatorColor,\n          onChange = _props.onChange,\n          scrollable = _props.scrollable,\n          ScrollButtonComponent = _props.ScrollButtonComponent,\n          scrollButtons = _props.scrollButtons,\n          _props$TabIndicatorPr = _props.TabIndicatorProps,\n          TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n          textColor = _props.textColor,\n          theme = _props.theme,\n          value = _props.value,\n          other = (0, _objectWithoutProperties2.default)(_props, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"fullWidth\", \"indicatorColor\", \"onChange\", \"scrollable\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"theme\", \"value\"]);\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `scrollable={true}` properties ' + 'at the same time on a `Tabs` component.') : void 0;\n      var className = (0, _classnames.default)(classes.root, classNameProp);\n      var flexContainerClassName = (0, _classnames.default)(classes.flexContainer, (0, _defineProperty2.default)({}, classes.centered, centered && !scrollable));\n      var scrollerClassName = (0, _classnames.default)(classes.scroller, (_classNames4 = {}, (0, _defineProperty2.default)(_classNames4, classes.fixed, !scrollable), (0, _defineProperty2.default)(_classNames4, classes.scrollable, scrollable), _classNames4));\n\n      var indicator = _react.default.createElement(_TabIndicator.default, (0, _extends2.default)({\n        className: classes.indicator,\n        color: indicatorColor\n      }, TabIndicatorProps, {\n        style: (0, _objectSpread2.default)({}, this.state.indicatorStyle, TabIndicatorProps.style)\n      }));\n\n      this.valueToIndex = new Map();\n      var childIndex = 0;\n\n      var children = _react.default.Children.map(childrenProp, function (child) {\n        if (!_react.default.isValidElement(child)) {\n          return null;\n        }\n\n        process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(child.type !== _react.default.Fragment, [\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n        var childValue = child.props.value === undefined ? childIndex : child.props.value;\n\n        _this2.valueToIndex.set(childValue, childIndex);\n\n        var selected = childValue === value;\n        childIndex += 1;\n        return _react.default.cloneElement(child, {\n          fullWidth: fullWidth,\n          indicator: selected && !_this2.state.mounted && indicator,\n          selected: selected,\n          onChange: onChange,\n          textColor: textColor,\n          value: childValue\n        });\n      });\n\n      var conditionalElements = this.getConditionalElements();\n      return _react.default.createElement(Component, (0, _extends2.default)({\n        className: className\n      }, other), _react.default.createElement(_reactEventListener.default, {\n        target: \"window\",\n        onResize: this.handleResize\n      }), conditionalElements.scrollbarSizeListener, _react.default.createElement(\"div\", {\n        className: classes.flexContainer\n      }, conditionalElements.scrollButtonLeft, _react.default.createElement(\"div\", {\n        className: scrollerClassName,\n        style: this.state.scrollerStyle,\n        ref: function ref(_ref3) {\n          _this2.tabsRef = _ref3;\n        },\n        role: \"tablist\",\n        onScroll: this.handleTabsScroll\n      }, _react.default.createElement(\"div\", {\n        className: flexContainerClassName\n      }, children), this.state.mounted && indicator), conditionalElements.scrollButtonRight));\n    }\n  }]);\n  return Tabs;\n}(_react.default.Component);\n\nTabs.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `updateIndicator()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: _propTypes.default.func,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: _propTypes.default.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * If `true`, the tabs will grow to use all the available space.\n   * This property is intended for small views, like on mobile.\n   */\n  fullWidth: _propTypes.default.bool,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: _propTypes.default.oneOf(['secondary', 'primary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} value We default to the index of the child\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * True invokes scrolling properties and allow for horizontally scrolling\n   * (or swiping) the tab bar.\n   */\n  scrollable: _propTypes.default.bool,\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll\n   * `auto` will only present them on medium and larger viewports\n   * `on` will always present them\n   * `off` will never present them\n   */\n  scrollButtons: _propTypes.default.oneOf(['auto', 'on', 'off']),\n\n  /**\n   * Properties applied to the `TabIndicator` element.\n   */\n  TabIndicatorProps: _propTypes.default.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: _propTypes.default.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * @ignore\n   */\n  theme: _propTypes.default.object.isRequired,\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: _propTypes.default.any\n} : {};\nTabs.defaultProps = {\n  centered: false,\n  component: 'div',\n  fullWidth: false,\n  indicatorColor: 'secondary',\n  scrollable: false,\n  ScrollButtonComponent: _TabScrollButton.default,\n  scrollButtons: 'auto',\n  textColor: 'inherit'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiTabs',\n  withTheme: true\n})(Tabs);\n\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_event_listener$dist$react_event_listener_cjs","~$module$node_modules$$material_ui$core$internal$animate","~$module$node_modules$$babel$runtime$helpers$builtin$classCallCheck","~$module$node_modules$$babel$runtime$helpers$builtin$interopRequireDefault","~$module$node_modules$debounce$index","~$module$node_modules$$babel$runtime$helpers$builtin$defineProperty","~$module$node_modules$react$index","~$module$node_modules$$material_ui$core$Tabs$TabScrollButton","~$module$node_modules$prop_types$index","~$module$node_modules$$babel$runtime$helpers$builtin$objectSpread","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$builtin$objectWithoutProperties","~$module$node_modules$warning$warning","~$module$node_modules$$babel$runtime$helpers$builtin$createClass","~$module$node_modules$classnames$index","~$module$node_modules$$babel$runtime$helpers$builtin$extends","~$module$node_modules$$material_ui$core$Tabs$ScrollbarSize","~$module$node_modules$$material_ui$core$styles$withStyles","~$module$node_modules$$babel$runtime$helpers$builtin$inherits","~$module$node_modules$normalize_scroll_left$lib$main","~$module$node_modules$$babel$runtime$helpers$builtin$possibleConstructorReturn","~$module$node_modules$$material_ui$core$Tabs$TabIndicator"]],"~:properties",["^5",["handleResize","scrollWidth","overflowX","getConditionalElements","role","updateScrollButtonState","showRightScroll","tabMeta","handleRightScrollClick","selected","marginBottom","width","right","whiteSpace","indicator","onChange","ScrollButtonComponent","minHeight","fullWidth","scrollButtonsAuto","scrollLeft","className","scroll","handleTabsScroll","mounted","scroller","key","component","__esModule","justifyContent","showLeftScroll","indicatorStyle","root","fixed","indicatorColor","propTypes","handleLeftScrollClick","moveTabsScroll","position","name","scrollLeftNormalized","style","value","visible","getTabsMeta","tabs","direction","tabsMeta","handleScrollbarSizeChange","textColor","scrollerStyle","scrollButtons","styles","centered","scrollButtonRight","valueToIndex","scrollSelectedIntoView","onClick","defaultProps","clientWidth","withTheme","overflow","state","ref","target","scrollbarSizeListener","display","onScroll","onLoad","flexContainer","flex","updateIndicator","scrollable","color","default","WebkitOverflowScrolling","left","scrollButtonLeft","onResize","tabsRef"]],"~:compiled-at",1534237703015,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$Tabs$Tabs.js\",\n\"lineCount\":16,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@material-ui/core/Tabs/Tabs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$Tabs$Tabs\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/builtin/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.styles = void 0;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/builtin/extends\\\"));\\n\\nvar _objectSpread2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/builtin/objectSpread\\\"));\\n\\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/builtin/objectWithoutProperties\\\"));\\n\\nvar _classCallCheck2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/builtin/classCallCheck\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/builtin/createClass\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/builtin/possibleConstructorReturn\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/builtin/inherits\\\"));\\n\\nvar _defineProperty2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/builtin/defineProperty\\\"));\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _warning = _interopRequireDefault(require(\\\"warning\\\"));\\n\\nvar _classnames = _interopRequireDefault(require(\\\"classnames\\\"));\\n\\nvar _reactEventListener = _interopRequireDefault(require(\\\"react-event-listener\\\"));\\n\\nvar _debounce = _interopRequireDefault(require(\\\"debounce\\\"));\\n\\nvar _normalizeScrollLeft = require(\\\"normalize-scroll-left\\\");\\n\\nvar _animate = _interopRequireDefault(require(\\\"../internal/animate\\\"));\\n\\nvar _ScrollbarSize = _interopRequireDefault(require(\\\"./ScrollbarSize\\\"));\\n\\nvar _withStyles = _interopRequireDefault(require(\\\"../styles/withStyles\\\"));\\n\\nvar _TabIndicator = _interopRequireDefault(require(\\\"./TabIndicator\\\"));\\n\\nvar _TabScrollButton = _interopRequireDefault(require(\\\"./TabScrollButton\\\"));\\n\\n/* eslint-disable no-restricted-globals */\\n// < 1kb payload overhead when lodash/debounce is > 3kb.\\nvar styles = function styles(theme) {\\n  return {\\n    /* Styles applied to the root element. */\\n    root: {\\n      overflow: 'hidden',\\n      minHeight: 48,\\n      WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\\n\\n    },\\n\\n    /* Styles applied to the flex container element. */\\n    flexContainer: {\\n      display: 'flex'\\n    },\\n\\n    /* Styles applied to the flex container element if `centered={true}` & `scrollable={false}`. */\\n    centered: {\\n      justifyContent: 'center'\\n    },\\n\\n    /* Styles applied to the tablist element. */\\n    scroller: {\\n      position: 'relative',\\n      display: 'inline-block',\\n      flex: '1 1 auto',\\n      whiteSpace: 'nowrap'\\n    },\\n\\n    /* Styles applied to the tablist element if `scrollable={false}`. */\\n    fixed: {\\n      overflowX: 'hidden',\\n      width: '100%'\\n    },\\n\\n    /* Styles applied to the tablist element if `scrollable={true}`. */\\n    scrollable: {\\n      overflowX: 'scroll'\\n    },\\n\\n    /* Styles applied to the `ScrollButtonComponent` component. */\\n    scrollButtons: {},\\n\\n    /* Styles applied to the `ScrollButtonComponent` component if `sscrollButtons=\\\"auto\\\"`. */\\n    scrollButtonsAuto: (0, _defineProperty2.default)({}, theme.breakpoints.down('xs'), {\\n      display: 'none'\\n    }),\\n\\n    /* Styles applied to the `TabIndicator` component. */\\n    indicator: {}\\n  };\\n};\\n\\nexports.styles = styles;\\n\\nvar Tabs =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  (0, _inherits2.default)(Tabs, _React$Component);\\n\\n  function Tabs() {\\n    var _ref;\\n\\n    var _temp, _this;\\n\\n    (0, _classCallCheck2.default)(this, Tabs);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call.apply(_ref, [this].concat(args))), _this.tabs = null, _this.valueToIndex = new Map(), _this.handleResize = (0, _debounce.default)(function () {\\n      _this.updateIndicatorState(_this.props);\\n\\n      _this.updateScrollButtonState();\\n    }, 166), _this.handleTabsScroll = (0, _debounce.default)(function () {\\n      _this.updateScrollButtonState();\\n    }, 166), _this.state = {\\n      indicatorStyle: {},\\n      scrollerStyle: {\\n        marginBottom: 0\\n      },\\n      showLeftScroll: false,\\n      showRightScroll: false,\\n      mounted: false\\n    }, _this.getConditionalElements = function () {\\n      var _this$props = _this.props,\\n          classes = _this$props.classes,\\n          scrollable = _this$props.scrollable,\\n          ScrollButtonComponent = _this$props.ScrollButtonComponent,\\n          scrollButtons = _this$props.scrollButtons,\\n          theme = _this$props.theme;\\n      var conditionalElements = {};\\n      conditionalElements.scrollbarSizeListener = scrollable ? _react.default.createElement(_ScrollbarSize.default, {\\n        onLoad: _this.handleScrollbarSizeChange,\\n        onChange: _this.handleScrollbarSizeChange\\n      }) : null;\\n      var showScrollButtons = scrollable && (scrollButtons === 'auto' || scrollButtons === 'on');\\n      conditionalElements.scrollButtonLeft = showScrollButtons ? _react.default.createElement(ScrollButtonComponent, {\\n        direction: theme && theme.direction === 'rtl' ? 'right' : 'left',\\n        onClick: _this.handleLeftScrollClick,\\n        visible: _this.state.showLeftScroll,\\n        className: (0, _classnames.default)(classes.scrollButtons, (0, _defineProperty2.default)({}, classes.scrollButtonsAuto, scrollButtons === 'auto'))\\n      }) : null;\\n      conditionalElements.scrollButtonRight = showScrollButtons ? _react.default.createElement(ScrollButtonComponent, {\\n        direction: theme && theme.direction === 'rtl' ? 'left' : 'right',\\n        onClick: _this.handleRightScrollClick,\\n        visible: _this.state.showRightScroll,\\n        className: (0, _classnames.default)(classes.scrollButtons, (0, _defineProperty2.default)({}, classes.scrollButtonsAuto, scrollButtons === 'auto'))\\n      }) : null;\\n      return conditionalElements;\\n    }, _this.getTabsMeta = function (value, direction) {\\n      var tabsMeta;\\n\\n      if (_this.tabsRef) {\\n        var rect = _this.tabsRef.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\\n\\n\\n        tabsMeta = {\\n          clientWidth: _this.tabsRef.clientWidth,\\n          scrollLeft: _this.tabsRef.scrollLeft,\\n          scrollLeftNormalized: (0, _normalizeScrollLeft.getNormalizedScrollLeft)(_this.tabsRef, direction),\\n          scrollWidth: _this.tabsRef.scrollWidth,\\n          left: rect.left,\\n          right: rect.right\\n        };\\n      }\\n\\n      var tabMeta;\\n\\n      if (_this.tabsRef && value !== false) {\\n        var children = _this.tabsRef.children[0].children;\\n\\n        if (children.length > 0) {\\n          var tab = children[_this.valueToIndex.get(value)];\\n\\n          process.env.NODE_ENV !== \\\"production\\\" ? (0, _warning.default)(tab, \\\"Material-UI: the value provided `\\\".concat(value, \\\"` is invalid\\\")) : void 0;\\n          tabMeta = tab ? tab.getBoundingClientRect() : null;\\n        }\\n      }\\n\\n      return {\\n        tabsMeta: tabsMeta,\\n        tabMeta: tabMeta\\n      };\\n    }, _this.handleLeftScrollClick = function () {\\n      _this.moveTabsScroll(-_this.tabsRef.clientWidth);\\n    }, _this.handleRightScrollClick = function () {\\n      _this.moveTabsScroll(_this.tabsRef.clientWidth);\\n    }, _this.handleScrollbarSizeChange = function (_ref2) {\\n      var scrollbarHeight = _ref2.scrollbarHeight;\\n\\n      _this.setState({\\n        scrollerStyle: {\\n          marginBottom: -scrollbarHeight\\n        }\\n      });\\n    }, _this.moveTabsScroll = function (delta) {\\n      var theme = _this.props.theme;\\n      var multiplier = theme.direction === 'rtl' ? -1 : 1;\\n      var nextScrollLeft = _this.tabsRef.scrollLeft + delta * multiplier; // Fix for Edge\\n\\n      var invert = theme.direction === 'rtl' && (0, _normalizeScrollLeft.detectScrollType)() === 'reverse' ? -1 : 1;\\n\\n      _this.scroll(invert * nextScrollLeft);\\n    }, _this.scrollSelectedIntoView = function () {\\n      var _this$props2 = _this.props,\\n          theme = _this$props2.theme,\\n          value = _this$props2.value;\\n\\n      var _this$getTabsMeta = _this.getTabsMeta(value, theme.direction),\\n          tabsMeta = _this$getTabsMeta.tabsMeta,\\n          tabMeta = _this$getTabsMeta.tabMeta;\\n\\n      if (!tabMeta || !tabsMeta) {\\n        return;\\n      }\\n\\n      if (tabMeta.left < tabsMeta.left) {\\n        // left side of button is out of view\\n        var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\\n\\n        _this.scroll(nextScrollLeft);\\n      } else if (tabMeta.right > tabsMeta.right) {\\n        // right side of button is out of view\\n        var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\\n\\n        _this.scroll(_nextScrollLeft);\\n      }\\n    }, _this.scroll = function (value) {\\n      (0, _animate.default)('scrollLeft', _this.tabsRef, value);\\n    }, _this.updateScrollButtonState = function () {\\n      var _this$props3 = _this.props,\\n          scrollable = _this$props3.scrollable,\\n          scrollButtons = _this$props3.scrollButtons,\\n          theme = _this$props3.theme;\\n\\n      if (scrollable && scrollButtons !== 'off') {\\n        var _this$tabsRef = _this.tabsRef,\\n            scrollWidth = _this$tabsRef.scrollWidth,\\n            clientWidth = _this$tabsRef.clientWidth;\\n        var scrollLeft = (0, _normalizeScrollLeft.getNormalizedScrollLeft)(_this.tabsRef, theme.direction);\\n        var showLeftScroll = theme.direction === 'rtl' ? scrollWidth > clientWidth + scrollLeft : scrollLeft > 0;\\n        var showRightScroll = theme.direction === 'rtl' ? scrollLeft > 0 : scrollWidth > clientWidth + scrollLeft;\\n\\n        if (showLeftScroll !== _this.state.showLeftScroll || showRightScroll !== _this.state.showRightScroll) {\\n          _this.setState({\\n            showLeftScroll: showLeftScroll,\\n            showRightScroll: showRightScroll\\n          });\\n        }\\n      }\\n    }, _temp));\\n  }\\n\\n  (0, _createClass2.default)(Tabs, [{\\n    key: \\\"componentDidMount\\\",\\n    value: function componentDidMount() {\\n      // eslint-disable-next-line react/no-did-mount-set-state\\n      this.setState({\\n        mounted: true\\n      });\\n      this.updateIndicatorState(this.props);\\n      this.updateScrollButtonState();\\n\\n      if (this.props.action) {\\n        this.props.action({\\n          updateIndicator: this.handleResize\\n        });\\n      }\\n    }\\n  }, {\\n    key: \\\"componentDidUpdate\\\",\\n    value: function componentDidUpdate(prevProps, prevState) {\\n      // The index might have changed at the same time.\\n      // We need to check again the right indicator position.\\n      this.updateIndicatorState(this.props);\\n      this.updateScrollButtonState();\\n\\n      if (this.state.indicatorStyle !== prevState.indicatorStyle) {\\n        this.scrollSelectedIntoView();\\n      }\\n    }\\n  }, {\\n    key: \\\"componentWillUnmount\\\",\\n    value: function componentWillUnmount() {\\n      this.handleResize.clear();\\n      this.handleTabsScroll.clear();\\n    }\\n  }, {\\n    key: \\\"updateIndicatorState\\\",\\n    value: function updateIndicatorState(props) {\\n      var theme = props.theme,\\n          value = props.value;\\n\\n      var _getTabsMeta = this.getTabsMeta(value, theme.direction),\\n          tabsMeta = _getTabsMeta.tabsMeta,\\n          tabMeta = _getTabsMeta.tabMeta;\\n\\n      var left = 0;\\n\\n      if (tabMeta && tabsMeta) {\\n        var correction = theme.direction === 'rtl' ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\\n        left = Math.round(tabMeta.left - tabsMeta.left + correction);\\n      }\\n\\n      var indicatorStyle = {\\n        left: left,\\n        // May be wrong until the font is loaded.\\n        width: tabMeta ? Math.round(tabMeta.width) : 0\\n      };\\n\\n      if ((indicatorStyle.left !== this.state.indicatorStyle.left || indicatorStyle.width !== this.state.indicatorStyle.width) && !isNaN(indicatorStyle.left) && !isNaN(indicatorStyle.width)) {\\n        this.setState({\\n          indicatorStyle: indicatorStyle\\n        });\\n      }\\n    }\\n  }, {\\n    key: \\\"render\\\",\\n    value: function render() {\\n      var _classNames4,\\n          _this2 = this;\\n\\n      var _props = this.props,\\n          action = _props.action,\\n          centered = _props.centered,\\n          childrenProp = _props.children,\\n          classes = _props.classes,\\n          classNameProp = _props.className,\\n          Component = _props.component,\\n          fullWidth = _props.fullWidth,\\n          indicatorColor = _props.indicatorColor,\\n          onChange = _props.onChange,\\n          scrollable = _props.scrollable,\\n          ScrollButtonComponent = _props.ScrollButtonComponent,\\n          scrollButtons = _props.scrollButtons,\\n          _props$TabIndicatorPr = _props.TabIndicatorProps,\\n          TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\\n          textColor = _props.textColor,\\n          theme = _props.theme,\\n          value = _props.value,\\n          other = (0, _objectWithoutProperties2.default)(_props, [\\\"action\\\", \\\"centered\\\", \\\"children\\\", \\\"classes\\\", \\\"className\\\", \\\"component\\\", \\\"fullWidth\\\", \\\"indicatorColor\\\", \\\"onChange\\\", \\\"scrollable\\\", \\\"ScrollButtonComponent\\\", \\\"scrollButtons\\\", \\\"TabIndicatorProps\\\", \\\"textColor\\\", \\\"theme\\\", \\\"value\\\"]);\\n      process.env.NODE_ENV !== \\\"production\\\" ? (0, _warning.default)(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `scrollable={true}` properties ' + 'at the same time on a `Tabs` component.') : void 0;\\n      var className = (0, _classnames.default)(classes.root, classNameProp);\\n      var flexContainerClassName = (0, _classnames.default)(classes.flexContainer, (0, _defineProperty2.default)({}, classes.centered, centered && !scrollable));\\n      var scrollerClassName = (0, _classnames.default)(classes.scroller, (_classNames4 = {}, (0, _defineProperty2.default)(_classNames4, classes.fixed, !scrollable), (0, _defineProperty2.default)(_classNames4, classes.scrollable, scrollable), _classNames4));\\n\\n      var indicator = _react.default.createElement(_TabIndicator.default, (0, _extends2.default)({\\n        className: classes.indicator,\\n        color: indicatorColor\\n      }, TabIndicatorProps, {\\n        style: (0, _objectSpread2.default)({}, this.state.indicatorStyle, TabIndicatorProps.style)\\n      }));\\n\\n      this.valueToIndex = new Map();\\n      var childIndex = 0;\\n\\n      var children = _react.default.Children.map(childrenProp, function (child) {\\n        if (!_react.default.isValidElement(child)) {\\n          return null;\\n        }\\n\\n        process.env.NODE_ENV !== \\\"production\\\" ? (0, _warning.default)(child.type !== _react.default.Fragment, [\\\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\\\", 'Consider providing an array instead.'].join('\\\\n')) : void 0;\\n        var childValue = child.props.value === undefined ? childIndex : child.props.value;\\n\\n        _this2.valueToIndex.set(childValue, childIndex);\\n\\n        var selected = childValue === value;\\n        childIndex += 1;\\n        return _react.default.cloneElement(child, {\\n          fullWidth: fullWidth,\\n          indicator: selected && !_this2.state.mounted && indicator,\\n          selected: selected,\\n          onChange: onChange,\\n          textColor: textColor,\\n          value: childValue\\n        });\\n      });\\n\\n      var conditionalElements = this.getConditionalElements();\\n      return _react.default.createElement(Component, (0, _extends2.default)({\\n        className: className\\n      }, other), _react.default.createElement(_reactEventListener.default, {\\n        target: \\\"window\\\",\\n        onResize: this.handleResize\\n      }), conditionalElements.scrollbarSizeListener, _react.default.createElement(\\\"div\\\", {\\n        className: classes.flexContainer\\n      }, conditionalElements.scrollButtonLeft, _react.default.createElement(\\\"div\\\", {\\n        className: scrollerClassName,\\n        style: this.state.scrollerStyle,\\n        ref: function ref(_ref3) {\\n          _this2.tabsRef = _ref3;\\n        },\\n        role: \\\"tablist\\\",\\n        onScroll: this.handleTabsScroll\\n      }, _react.default.createElement(\\\"div\\\", {\\n        className: flexContainerClassName\\n      }, children), this.state.mounted && indicator), conditionalElements.scrollButtonRight));\\n    }\\n  }]);\\n  return Tabs;\\n}(_react.default.Component);\\n\\nTabs.propTypes = process.env.NODE_ENV !== \\\"production\\\" ? {\\n  /**\\n   * Callback fired when the component mounts.\\n   * This is useful when you want to trigger an action programmatically.\\n   * It currently only supports `updateIndicator()` action.\\n   *\\n   * @param {object} actions This object contains all possible actions\\n   * that can be triggered programmatically.\\n   */\\n  action: _propTypes.default.func,\\n\\n  /**\\n   * If `true`, the tabs will be centered.\\n   * This property is intended for large views.\\n   */\\n  centered: _propTypes.default.bool,\\n\\n  /**\\n   * The content of the component.\\n   */\\n  children: _propTypes.default.node,\\n\\n  /**\\n   * Override or extend the styles applied to the component.\\n   * See [CSS API](#css-api) below for more details.\\n   */\\n  classes: _propTypes.default.object.isRequired,\\n\\n  /**\\n   * @ignore\\n   */\\n  className: _propTypes.default.string,\\n\\n  /**\\n   * The component used for the root node.\\n   * Either a string to use a DOM element or a component.\\n   */\\n  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\\n\\n  /**\\n   * If `true`, the tabs will grow to use all the available space.\\n   * This property is intended for small views, like on mobile.\\n   */\\n  fullWidth: _propTypes.default.bool,\\n\\n  /**\\n   * Determines the color of the indicator.\\n   */\\n  indicatorColor: _propTypes.default.oneOf(['secondary', 'primary']),\\n\\n  /**\\n   * Callback fired when the value changes.\\n   *\\n   * @param {object} event The event source of the callback\\n   * @param {number} value We default to the index of the child\\n   */\\n  onChange: _propTypes.default.func,\\n\\n  /**\\n   * True invokes scrolling properties and allow for horizontally scrolling\\n   * (or swiping) the tab bar.\\n   */\\n  scrollable: _propTypes.default.bool,\\n\\n  /**\\n   * The component used to render the scroll buttons.\\n   */\\n  ScrollButtonComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\\n\\n  /**\\n   * Determine behavior of scroll buttons when tabs are set to scroll\\n   * `auto` will only present them on medium and larger viewports\\n   * `on` will always present them\\n   * `off` will never present them\\n   */\\n  scrollButtons: _propTypes.default.oneOf(['auto', 'on', 'off']),\\n\\n  /**\\n   * Properties applied to the `TabIndicator` element.\\n   */\\n  TabIndicatorProps: _propTypes.default.object,\\n\\n  /**\\n   * Determines the color of the `Tab`.\\n   */\\n  textColor: _propTypes.default.oneOf(['secondary', 'primary', 'inherit']),\\n\\n  /**\\n   * @ignore\\n   */\\n  theme: _propTypes.default.object.isRequired,\\n\\n  /**\\n   * The value of the currently selected `Tab`.\\n   * If you don't want any selected `Tab`, you can set this property to `false`.\\n   */\\n  value: _propTypes.default.any\\n} : {};\\nTabs.defaultProps = {\\n  centered: false,\\n  component: 'div',\\n  fullWidth: false,\\n  indicatorColor: 'secondary',\\n  scrollable: false,\\n  ScrollButtonComponent: _TabScrollButton.default,\\n  scrollButtons: 'auto',\\n  textColor: 'inherit'\\n};\\n\\nvar _default = (0, _withStyles.default)(styles, {\\n  name: 'MuiTabs',\\n  withTheme: true\\n})(Tabs);\\n\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"styles\",\"_extends2\",\"_objectSpread2\",\"_objectWithoutProperties2\",\"_classCallCheck2\",\"_createClass2\",\"_possibleConstructorReturn2\",\"_inherits2\",\"_defineProperty2\",\"_react\",\"_classnames\",\"_reactEventListener\",\"_debounce\",\"_normalizeScrollLeft\",\"_animate\",\"_ScrollbarSize\",\"_withStyles\",\"_TabIndicator\",\"_TabScrollButton\",\"theme\",\"root\",\"overflow\",\"minHeight\",\"WebkitOverflowScrolling\",\"flexContainer\",\"display\",\"centered\",\"justifyContent\",\"scroller\",\"position\",\"flex\",\"whiteSpace\",\"fixed\",\"overflowX\",\"width\",\"scrollable\",\"scrollButtons\",\"scrollButtonsAuto\",\"breakpoints\",\"down\",\"indicator\",\"Tabs\",\"_React$Component\",\"_ref\",\"_temp\",\"_this\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"call\",\"__proto__\",\"getPrototypeOf\",\"apply\",\"concat\",\"tabs\",\"valueToIndex\",\"Map\",\"handleResize\",\"updateIndicatorState\",\"props\",\"updateScrollButtonState\",\"handleTabsScroll\",\"state\",\"indicatorStyle\",\"scrollerStyle\",\"marginBottom\",\"showLeftScroll\",\"showRightScroll\",\"mounted\",\"getConditionalElements\",\"_this.getConditionalElements\",\"_this$props\",\"classes\",\"ScrollButtonComponent\",\"conditionalElements\",\"scrollbarSizeListener\",\"createElement\",\"onLoad\",\"handleScrollbarSizeChange\",\"onChange\",\"showScrollButtons\",\"scrollButtonLeft\",\"direction\",\"onClick\",\"handleLeftScrollClick\",\"visible\",\"className\",\"scrollButtonRight\",\"handleRightScrollClick\",\"getTabsMeta\",\"_this.getTabsMeta\",\"tabsRef\",\"rect\",\"getBoundingClientRect\",\"tabsMeta\",\"clientWidth\",\"scrollLeft\",\"scrollLeftNormalized\",\"getNormalizedScrollLeft\",\"scrollWidth\",\"left\",\"right\",\"children\",\"tab\",\"get\",\"tabMeta\",\"_this.handleLeftScrollClick\",\"moveTabsScroll\",\"_this.handleRightScrollClick\",\"_this.handleScrollbarSizeChange\",\"_ref2\",\"setState\",\"scrollbarHeight\",\"_this.moveTabsScroll\",\"delta\",\"nextScrollLeft\",\"multiplier\",\"invert\",\"detectScrollType\",\"scroll\",\"scrollSelectedIntoView\",\"_this.scrollSelectedIntoView\",\"_this$props2\",\"_this$getTabsMeta\",\"_this.scroll\",\"_this.updateScrollButtonState\",\"_this$props3\",\"_this$tabsRef\",\"key\",\"componentDidMount\",\"action\",\"updateIndicator\",\"componentDidUpdate\",\"prevProps\",\"prevState\",\"componentWillUnmount\",\"clear\",\"_getTabsMeta\",\"Math\",\"round\",\"correction\",\"isNaN\",\"render\",\"_classNames4\",\"_this2\",\"_props\",\"childrenProp\",\"classNameProp\",\"Component\",\"component\",\"fullWidth\",\"indicatorColor\",\"_props$TabIndicatorPr\",\"TabIndicatorProps\",\"textColor\",\"other\",\"flexContainerClassName\",\"scrollerClassName\",\"color\",\"style\",\"childIndex\",\"Children\",\"map\",\"child\",\"isValidElement\",\"childValue\",\"undefined\",\"set\",\"selected\",\"cloneElement\",\"target\",\"onResize\",\"ref\",\"_ref3\",\"role\",\"onScroll\",\"propTypes\",\"defaultProps\",\"_default\",\"name\",\"withTheme\"]\n}\n"]