["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/camelize.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$camelize=function(c,d,a,f,b,g){var e=/-(.)/g;f.exports=function(a){return a.replace(e,function(a,b){return b.toUpperCase()})}}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$camelize\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1534237702506,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$camelize.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAYvH,IAAIC,EAAiB,OAiBrBH,EAAAC,QAAA,CANAG,QAAiB,CAACC,CAAD,CAAS,CACxB,MAAOA,EAAAC,QAAA,CAAeH,CAAf,CAA+B,QAAS,CAACI,CAAD,CAAIC,CAAJ,CAAe,CAC5D,MAAOA,EAAAC,YAAA,EADqD,CAAvD,CADiB,CAvB6F;\",\n\"sources\":[\"node_modules/fbjs/lib/camelize.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$camelize\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n */\\n\\nvar _hyphenPattern = /-(.)/g;\\n\\n/**\\n * Camelcases a hyphenated string, for example:\\n *\\n *   > camelize('background-color')\\n *   < \\\"backgroundColor\\\"\\n *\\n * @param {string} string\\n * @return {string}\\n */\\nfunction camelize(string) {\\n  return string.replace(_hyphenPattern, function (_, character) {\\n    return character.toUpperCase();\\n  });\\n}\\n\\nmodule.exports = camelize;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_hyphenPattern\",\"camelize\",\"string\",\"replace\",\"_\",\"character\",\"toUpperCase\"]\n}\n"]