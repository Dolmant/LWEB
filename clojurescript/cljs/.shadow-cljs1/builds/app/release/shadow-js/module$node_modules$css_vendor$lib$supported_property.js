["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/css-vendor/lib/supported-property.js"],"~:js","shadow$provide.module$node_modules$css_vendor$lib$supported_property=function(c,d,a,f,b,g){function e(a){return a&&a.__esModule?a:{\"default\":a}}Object.defineProperty(b,\"__esModule\",{value:!0});b[\"default\"]=function(a){if(!q)return a;if(null!=n[a])return n[a];(0,l[\"default\"])(a)in q.style?n[a]=a:k[\"default\"].js+(0,l[\"default\"])(\"-\"+a)in q.style?n[a]=k[\"default\"].css+a:n[a]=!1;return n[a]};c=a(\"module$node_modules$is_in_browser$dist$index\");c=e(c);d=a(\"module$node_modules$css_vendor$lib$prefix\");var k=\ne(d);a=a(\"module$node_modules$css_vendor$lib$camelize\");var l=e(a),q=void 0,n={};if(c[\"default\"]){q=document.createElement(\"p\");a=window.getComputedStyle(document.documentElement,\"\");for(var p in a)isNaN(p)||(n[a[p]]=a[p])}}","~:source","shadow$provide[\"module$node_modules$css_vendor$lib$supported_property\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = supportedProperty;\n\nvar _isInBrowser = require('is-in-browser');\n\nvar _isInBrowser2 = _interopRequireDefault(_isInBrowser);\n\nvar _prefix = require('./prefix');\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _camelize = require('./camelize');\n\nvar _camelize2 = _interopRequireDefault(_camelize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar el = void 0;\nvar cache = {};\n\nif (_isInBrowser2['default']) {\n  el = document.createElement('p');\n\n  /**\n   * We test every property on vendor prefix requirement.\n   * Once tested, result is cached. It gives us up to 70% perf boost.\n   * http://jsperf.com/element-style-object-access-vs-plain-object\n   *\n   * Prefill cache with known css properties to reduce amount of\n   * properties we need to feature test at runtime.\n   * http://davidwalsh.name/vendor-prefix\n   */\n  var computed = window.getComputedStyle(document.documentElement, '');\n  for (var key in computed) {\n    if (!isNaN(key)) cache[computed[key]] = computed[key];\n  }\n}\n\n/**\n * Test if a property is supported, returns supported property with vendor\n * prefix if required. Returns `false` if not supported.\n *\n * @param {String} prop dash separated\n * @return {String|Boolean}\n * @api public\n */\nfunction supportedProperty(prop) {\n  // For server-side rendering.\n  if (!el) return prop;\n\n  // We have not tested this prop yet, lets do the test.\n  if (cache[prop] != null) return cache[prop];\n\n  // Camelization is required because we can't test using\n  // css syntax for e.g. in FF.\n  // Test if property is supported as it is.\n  if ((0, _camelize2['default'])(prop) in el.style) {\n    cache[prop] = prop;\n  }\n  // Test if property is supported with vendor prefix.\n  else if (_prefix2['default'].js + (0, _camelize2['default'])('-' + prop) in el.style) {\n      cache[prop] = _prefix2['default'].css + prop;\n    } else {\n      cache[prop] = false;\n    }\n\n  return cache[prop];\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$css_vendor$lib$prefix","~$shadow.js","~$module$node_modules$is_in_browser$dist$index","~$module$node_modules$css_vendor$lib$camelize"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1534237702637,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$css_vendor$lib$supported_property.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAoBvIC,QAASA,EAAsB,CAACC,CAAD,CAAM,CAAE,MAAOA,EAAA,EAAOA,CAAAC,WAAP,CAAwBD,CAAxB,CAA8B,CAAE,UAAWA,CAAb,CAAvC,CAjBrCE,MAAAC,eAAA,CAAsBN,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,EAAA,CAAQ,SAAR,CAAA,CA6CAQ,QAA0B,CAACC,CAAD,CAAO,CAE/B,GAAI,CAACC,CAAL,CAAS,MAAOD,EAGhB,IAAmB,IAAnB,EAAIE,CAAA,CAAMF,CAAN,CAAJ,CAAyB,MAAOE,EAAA,CAAMF,CAAN,CAK5B,EAAC,CAAA,CAAGG,CAAA,CAAW,SAAX,CAAJ,EAA2BH,CAA3B,CAAJ,EAAwCC,EAAAG,MAAxC,CACEF,CAAA,CAAMF,CAAN,CADF,CACgBA,CADhB,CAISK,CAAA,CAAS,SAAT,CAAAC,GAAJ,CAA6B,CAAC,CAAA,CAAGH,CAAA,CAAW,SAAX,CAAJ,EAA2B,GAA3B,CAAiCH,CAAjC,CAA7B,EAAuEC,EAAAG,MAAvE,CACDF,CAAA,CAAMF,CAAN,CADC,CACaK,CAAA,CAAS,SAAT,CAAAE,IADb,CACuCP,CADvC,CAGDE,CAAA,CAAMF,CAAN,CAHC,CAGa,CAAA,CAGlB,OAAOE,EAAA,CAAMF,CAAN,CApBwB,CA3C7BQ,EAAAA,CAAenB,CAAA,CAAQ,8CAAR,CAEfoB,EAAAA,CAAgBhB,CAAA,CAAuBe,CAAvB,CAEhBE,EAAAA,CAAUrB,CAAA,CAAQ,2CAAR,CAEd,KAAIgB;AAAWZ,CAAA,CAAuBiB,CAAvB,CAEXC,EAAAA,CAAYtB,CAAA,CAAQ,6CAAR,CAEhB,KAAIc,EAAaV,CAAA,CAAuBkB,CAAvB,CAAjB,CAIIV,EAAK,IAAK,EAJd,CAKIC,EAAQ,EAEZ,IAAIO,CAAA,CAAc,SAAd,CAAJ,CAA8B,CAC5BR,CAAA,CAAKW,QAAAC,cAAA,CAAuB,GAAvB,CAWDC,EAAAA,CAAWC,MAAAC,iBAAA,CAAwBJ,QAAAK,gBAAxB,CAAkD,EAAlD,CACf,KAAKC,IAAIA,CAAT,GAAgBJ,EAAhB,CACOK,KAAA,CAAMD,CAAN,CAAL,GAAiBhB,CAAA,CAAMY,CAAA,CAASI,CAAT,CAAN,CAAjB,CAAwCJ,CAAA,CAASI,CAAT,CAAxC,CAd0B,CAzByG;\",\n\"sources\":[\"node_modules/css-vendor/lib/supported-property.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$css_vendor$lib$supported_property\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports['default'] = supportedProperty;\\n\\nvar _isInBrowser = require('is-in-browser');\\n\\nvar _isInBrowser2 = _interopRequireDefault(_isInBrowser);\\n\\nvar _prefix = require('./prefix');\\n\\nvar _prefix2 = _interopRequireDefault(_prefix);\\n\\nvar _camelize = require('./camelize');\\n\\nvar _camelize2 = _interopRequireDefault(_camelize);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\\n\\nvar el = void 0;\\nvar cache = {};\\n\\nif (_isInBrowser2['default']) {\\n  el = document.createElement('p');\\n\\n  /**\\n   * We test every property on vendor prefix requirement.\\n   * Once tested, result is cached. It gives us up to 70% perf boost.\\n   * http://jsperf.com/element-style-object-access-vs-plain-object\\n   *\\n   * Prefill cache with known css properties to reduce amount of\\n   * properties we need to feature test at runtime.\\n   * http://davidwalsh.name/vendor-prefix\\n   */\\n  var computed = window.getComputedStyle(document.documentElement, '');\\n  for (var key in computed) {\\n    if (!isNaN(key)) cache[computed[key]] = computed[key];\\n  }\\n}\\n\\n/**\\n * Test if a property is supported, returns supported property with vendor\\n * prefix if required. Returns `false` if not supported.\\n *\\n * @param {String} prop dash separated\\n * @return {String|Boolean}\\n * @api public\\n */\\nfunction supportedProperty(prop) {\\n  // For server-side rendering.\\n  if (!el) return prop;\\n\\n  // We have not tested this prop yet, lets do the test.\\n  if (cache[prop] != null) return cache[prop];\\n\\n  // Camelization is required because we can't test using\\n  // css syntax for e.g. in FF.\\n  // Test if property is supported as it is.\\n  if ((0, _camelize2['default'])(prop) in el.style) {\\n    cache[prop] = prop;\\n  }\\n  // Test if property is supported with vendor prefix.\\n  else if (_prefix2['default'].js + (0, _camelize2['default'])('-' + prop) in el.style) {\\n      cache[prop] = _prefix2['default'].css + prop;\\n    } else {\\n      cache[prop] = false;\\n    }\\n\\n  return cache[prop];\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"supportedProperty\",\"prop\",\"el\",\"cache\",\"_camelize2\",\"style\",\"_prefix2\",\"js\",\"css\",\"_isInBrowser\",\"_isInBrowser2\",\"_prefix\",\"_camelize\",\"document\",\"createElement\",\"computed\",\"window\",\"getComputedStyle\",\"documentElement\",\"key\",\"isNaN\"]\n}\n"]