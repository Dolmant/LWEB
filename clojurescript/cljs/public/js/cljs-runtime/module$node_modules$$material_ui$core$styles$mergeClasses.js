shadow$provide.module$node_modules$$material_ui$core$styles$mergeClasses=function(global,process,require,module,exports,shadow$shims){global=require("module$node_modules$$babel$runtime$helpers$builtin$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _objectSpread2=global(require("module$node_modules$$babel$runtime$helpers$builtin$objectSpread")),_warning=global(require("module$node_modules$warning$warning")),_getDisplayName=global(require("module$node_modules$recompose$getDisplayName"));
exports.default=function(){var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},baseClasses=options.baseClasses,newClasses=options.newClasses,Component=options.Component;options=options.noBase;var noBase=void 0===options?!1:options;return newClasses?(0,_objectSpread2.default)({},baseClasses,Object.keys(newClasses).reduce(function(accumulator,key){(0,_warning.default)(baseClasses[key]||noBase,["Material-UI: the key `".concat(key,"` ")+"provided to the classes property is not implemented in ".concat((0,
_getDisplayName.default)(Component),"."),"You can only override one of the following: ".concat(Object.keys(baseClasses).join(","))].join("\n"));(0,_warning.default)(!newClasses[key]||"string"===typeof newClasses[key],["Material-UI: the key `".concat(key,"` ")+"provided to the classes property is not valid for ".concat((0,_getDisplayName.default)(Component),"."),"You need to provide a non empty string instead of: ".concat(newClasses[key],".")].join("\n"));newClasses[key]&&(accumulator[key]="".concat(baseClasses[key],
" ").concat(newClasses[key]));return accumulator},{})):baseClasses}}
//# sourceMappingURL=module$node_modules$$material_ui$core$styles$mergeClasses.js.map
