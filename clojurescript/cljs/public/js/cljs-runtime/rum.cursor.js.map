{"version":3,"file":"rum.cursor.js","sources":["rum/cursor.cljs"],"mappings":"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","names":["cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","old","new","_","oldv","newv","cljs.core/-write","writer","this","f","a","opts","other","b","rest","key","cljs.core/remove-watch","ref","cljs.core/List","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","path","cljs.core/pr-writer","callback","goog/getUid","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","this__4742__auto__","writer__4743__auto__","opt__4744__auto__","rum.cursor/Cursor","rum.cursor/->Cursor","meta","cljs.core/add-watch","G__3833","G__3834","cljs.core/-deref","G__3832","G__3835","G__3836","G__3837"],"sourcesContent":["(ns rum.cursor)\n\n\n(deftype Cursor [ref path meta]\n  Object\n  (equiv [this other]\n    (-equiv this other))\n\n  IAtom\n  \n  IMeta\n  (-meta [_] meta)\n  \n  IEquiv\n  (-equiv [this other]\n    (identical? this other))\n\n  IDeref\n  (-deref [_]\n    (get-in (-deref ref) path))\n\n  IWatchable\n  (-add-watch [this key callback]\n    (add-watch ref (list this key)\n      (fn [_ _ oldv newv]\n        (let [old (get-in oldv path)\n              new (get-in newv path)]\n          (when (not= old new)\n            (callback key this old new)))))\n    this)\n  \n  (-remove-watch [this key]\n    (remove-watch ref (list this key))\n    this)\n\n  IHash\n  (-hash [this] (goog/getUid this))\n\n  IReset\n  (-reset! [_ newv]\n    (swap! ref assoc-in path newv)\n    newv)\n\n  ISwap\n  (-swap! [this f]\n    (-reset! this (f (-deref this))))\n  (-swap! [this f a]\n    (-reset! this (f (-deref this) a)))\n  (-swap! [this f a b]\n    (-reset! this (f (-deref this) a b)))\n  (-swap! [this f a b rest]\n    (-reset! this (apply f (-deref this) a b rest)))\n  \n  IPrintWithWriter\n  (-pr-writer [this writer opts]\n    (-write writer \"#object [rum.cursor.Cursor \")\n    (pr-writer {:val (-deref this)} writer opts)\n    (-write writer \"]\")))\n\n"]}